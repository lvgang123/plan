main task:
first:	review python base
second:	review python+opencv_base
third:	c++ and python merge cord
end:	write summary at blog

---opencv---
cv2.imread('...')	cv2.imwrite('mycat.png',img)	cv2.imshow('image',img) 
vc = cv2.VideoCapture('test.mp4') (detail at blog)
cat=img[100:200,0:200]  	b,g,r=cv2.split(img)	img=cv2.merge((b,g,r))
cv2.copyMakeBorder(img, top_size, bottom_size, left_size, right_size, borderType=cv2.BORDER_REPLICATE(then))
cv2.addWeighted(img_cat, 0.4, img_dog, 0.6, 0)
cv2.resize(img, (0, 0), fx=4, fy=4)
ret, dst = cv2.threshold(src, thresh, maxval, type)
cv2.blur(img, (3, 3))	cv2.GaussianBlur(img, (5, 5), 1)  	cv2.medianBlur(img, 5)
kernel = np.ones((3,3),np.uint8) 
cv2.erode(img,kernel,iterations = 1)
cv2.dilate(dige_erosion,kernel,iterations = 1)
cv2.morphologyEx(img, cv2.MORPH_OPEN, kernel)
cv2.morphologyEx(img, cv2.MORPH_CLOSE, kernel)
cv2.morphologyEx(pie, cv2.MORPH_GRADIENT, kernel)
cv2.morphologyEx(img, cv2.MORPH_TOPHAT, kernel)
cv2.morphologyEx(img,cv2.MORPH_BLACKHAT, kernel)
dst = cv2.Sobel(src, ddepth, dx, dy, ksize)
cv2.convertScaleAbs(sobelxy)
Canny(img,80,150)
cv2.pyrUp(img)		cv2.pyrDown(img)
cv2.findContours(img,mode,method)
cv2.drawContours(draw_img, contours, -1, (0, 0, 255), 2)
cv2.contourArea(cnt)		cv2.arcLength(cnt,True)		
cv2.boundingRect(cnt)	cv2.minEnclosingCircle(cnt) 
cv2.matchTemplate(img,template,cv2.TM_CCOEFF_NORMED)
cv2.calcHist(images,channels,mask,histSize,ranges)

